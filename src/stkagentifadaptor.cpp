/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -v -c StkAgentIfAdaptor -a stkagentifadaptor.h:stkagentifadaptor.cpp -i ofonodbustypes.h ../interfaces/org.ofono.SimToolkitAgent.xml
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "stkagentifadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class StkAgentIfAdaptor
 */

StkAgentIfAdaptor::StkAgentIfAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

StkAgentIfAdaptor::~StkAgentIfAdaptor()
{
    // destructor
}

void StkAgentIfAdaptor::Cancel()
{
    // handle method call org.ofono.SimToolkitAgent.Cancel
    QMetaObject::invokeMethod(parent(), "Cancel");
}

bool StkAgentIfAdaptor::ConfirmCallSetup(const QString &info, uchar icon)
{
    // handle method call org.ofono.SimToolkitAgent.ConfirmCallSetup
    bool out0;
    QMetaObject::invokeMethod(parent(), "ConfirmCallSetup", Q_RETURN_ARG(bool, out0), Q_ARG(QString, info), Q_ARG(uchar, icon));
    return out0;
}

bool StkAgentIfAdaptor::ConfirmLaunchBrowser(const QString &info, uchar icon, const QString &url)
{
    // handle method call org.ofono.SimToolkitAgent.ConfirmLaunchBrowser
    bool out0;
    QMetaObject::invokeMethod(parent(), "ConfirmLaunchBrowser", Q_RETURN_ARG(bool, out0), Q_ARG(QString, info), Q_ARG(uchar, icon), Q_ARG(QString, url));
    return out0;
}

void StkAgentIfAdaptor::DisplayActionInformation(const QString &text, uchar icon)
{
    // handle method call org.ofono.SimToolkitAgent.DisplayActionInformation
    QMetaObject::invokeMethod(parent(), "DisplayActionInformation", Q_ARG(QString, text), Q_ARG(uchar, icon));
}

void StkAgentIfAdaptor::DisplayText(const QString &title, uchar icon, bool urgent)
{
    // handle method call org.ofono.SimToolkitAgent.DisplayText
    QMetaObject::invokeMethod(parent(), "DisplayText", Q_ARG(QString, title), Q_ARG(uchar, icon), Q_ARG(bool, urgent));
}

void StkAgentIfAdaptor::LoopTone(const QString &tone, const QString &text, uchar icon)
{
    // handle method call org.ofono.SimToolkitAgent.LoopTone
    QMetaObject::invokeMethod(parent(), "LoopTone", Q_ARG(QString, tone), Q_ARG(QString, text), Q_ARG(uchar, icon));
}

void StkAgentIfAdaptor::PlayTone(const QString &tone, const QString &text, uchar icon)
{
    // handle method call org.ofono.SimToolkitAgent.PlayTone
    QMetaObject::invokeMethod(parent(), "PlayTone", Q_ARG(QString, tone), Q_ARG(QString, text), Q_ARG(uchar, icon));
}

void StkAgentIfAdaptor::Release()
{
    // handle method call org.ofono.SimToolkitAgent.Release
    QMetaObject::invokeMethod(parent(), "Release");
}

bool StkAgentIfAdaptor::RequestConfirmation(const QString &title, uchar icon)
{
    // handle method call org.ofono.SimToolkitAgent.RequestConfirmation
    bool out0;
    QMetaObject::invokeMethod(parent(), "RequestConfirmation", Q_RETURN_ARG(bool, out0), Q_ARG(QString, title), Q_ARG(uchar, icon));
    return out0;
}

QString StkAgentIfAdaptor::RequestDigit(const QString &title, uchar icon)
{
    // handle method call org.ofono.SimToolkitAgent.RequestDigit
    QString out0;
    QMetaObject::invokeMethod(parent(), "RequestDigit", Q_RETURN_ARG(QString, out0), Q_ARG(QString, title), Q_ARG(uchar, icon));
    return out0;
}

QString StkAgentIfAdaptor::RequestDigits(const QString &title, uchar icon, const QString &defaultValue, uchar minChars, uchar maxChars, bool hideTyping)
{
    // handle method call org.ofono.SimToolkitAgent.RequestDigits
    QString out0;
    QMetaObject::invokeMethod(parent(), "RequestDigits", Q_RETURN_ARG(QString, out0), Q_ARG(QString, title), Q_ARG(uchar, icon), Q_ARG(QString, defaultValue), Q_ARG(uchar, minChars), Q_ARG(uchar, maxChars), Q_ARG(bool, hideTyping));
    return out0;
}

QString StkAgentIfAdaptor::RequestInput(const QString &title, uchar icon, const QString &defaultValue, uchar minChars, uchar maxChars, bool hideTyping)
{
    // handle method call org.ofono.SimToolkitAgent.RequestInput
    QString out0;
    QMetaObject::invokeMethod(parent(), "RequestInput", Q_RETURN_ARG(QString, out0), Q_ARG(QString, title), Q_ARG(uchar, icon), Q_ARG(QString, defaultValue), Q_ARG(uchar, minChars), Q_ARG(uchar, maxChars), Q_ARG(bool, hideTyping));
    return out0;
}

QString StkAgentIfAdaptor::RequestKey(const QString &title, uchar icon)
{
    // handle method call org.ofono.SimToolkitAgent.RequestKey
    QString out0;
    QMetaObject::invokeMethod(parent(), "RequestKey", Q_RETURN_ARG(QString, out0), Q_ARG(QString, title), Q_ARG(uchar, icon));
    return out0;
}

uchar StkAgentIfAdaptor::RequestSelection(const QString &title, uchar icon, OfonoMenuList items, short defaultValue)
{
    // handle method call org.ofono.SimToolkitAgent.RequestSelection
    uchar out0;
    QMetaObject::invokeMethod(parent(), "RequestSelection", Q_RETURN_ARG(uchar, out0), Q_ARG(QString, title), Q_ARG(uchar, icon), Q_ARG(OfonoMenuList, items), Q_ARG(short, defaultValue));
    return out0;
}

